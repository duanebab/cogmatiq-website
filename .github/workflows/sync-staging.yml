- name: Sync files to Staging Repo
        run: |
          # Configure Git user
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Define clone directory explicitly
          CLONE_DIR=$(mktemp -d)

          # Clone the target repository using SSH into the temp dir
          # Note: Replace 'duanebab' if your username/org is different
          git clone git@github.com:duanebab/cogmatiq-staging-site.git "$CLONE_DIR"

          # Go into the cloned repo
          cd "$CLONE_DIR"

          # Make sure we are on the main branch
          git checkout main || git checkout -b main

          # Remove old files (except .git directory)
          # Use find for safer deletion than rm -rf *
          find . -maxdepth 1 ! -name '.git' ! -name '.' -exec rm -rf {} \;

          # --- Revised Sync ---
          # Sync from the original workspace TO the clone directory
          # Using GITHUB_WORKSPACE environment variable which is always correct
          rsync -av --delete --exclude='.git/' --exclude='.github/' "$GITHUB_WORKSPACE/" "$CLONE_DIR/"
          # Exclude .github dir to avoid copying the workflow files themselves
          # --- End Revised Sync ---

          # Stage changes, commit, and push (still inside CLONE_DIR)
          git add -A
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Sync from develop branch: ${{ github.event.head_commit.message }}"
            git push origin main
          fi
        env:
          # Necessary for ssh-agent to work correctly with git over SSH
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
